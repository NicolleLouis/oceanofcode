import sys
import math
t = 0


# Grab the pellets as fast as you can!

# width: size of the grid
# height: top left corner is (x=0, y=0)
width, height = [int(i) for i in input().split()]
for i in range(height):
    row = input()  # one line of the grid: space " " is floor, pound "#" is wall

# game loop
while True:
    bigballdispo = 0
    dist1 = 0
    t += 1
    mindist = 32^2 + 15^2
    my_score, opponent_score = [int(i) for i in input().split()]
    visible_pac_count = int(input())  # all your pacs and enemy pacs in sight
    for i in range(visible_pac_count):
        # pac_id: pac number (unique within a team)
        # mine: true if this pac is yours
        # x: position in the grid
        # y: position in the grid
        # type_id: unused in wood leagues
        # speed_turns_left: unused in wood leagues
        # ability_cooldown: unused in wood leagues
        pac_id, mine, x, y, type_id, speed_turns_left, ability_cooldown = input().split()
        pac_id = int(pac_id)
        #mine = mine != "0"
        if mine == "1":
            xpac = int(x)
            ypac = int(y)
        speed_turns_left = int(speed_turns_left)
        ability_cooldown = int(ability_cooldown)
    visible_pellet_count = int(input())  # all pellets in sight
    for i in range(visible_pellet_count):
        # value: amount of points this pellet is worth
        xpellet, ypellet, value = [int(j) for j in input().split()]
        
        #je test la distance mini à la bille mais ça a pas marché donc j'ai commenté
        """if ((xpellet-xpac)^2 + (ypellet - ypac)^2) < mindist:
            minx = xpellet
            miny = ypellet
            mindist = (xpellet-xpac)^2 + (ypellet - ypac)^2"""
        #je me dis que je vais focus les grosses billes
        if value == 10:
            bigballdispo = 1
            xtarget = xpellet
            ytarget = ypellet
        #si y'a plus de grosse bille je regarde si y'a pas une bille à une distance de 1, ça serait bête de pas la manger    
        if ((xpellet-xpac)^2 + (ypellet - ypac)^2) == 1 and bigballdispo == 0:
            dist1 = 1
            xtarget = xpellet
            ytarget = ypellet
        #si y'a pas de grosse bille ni de bille à distance 1 je prends la dernière valeur de la liste des billes
        if bigballdispo == 0 and dist1 == 0:
            xtarget = xpellet
            ytarget = ypellet

    # Write an action using print
    # To debug: print("Debug messages...", file=sys.stderr)

    # MOVE <pacId> <x> <y>
    print("MOVE 0 " + str(xtarget) + " " + str(ytarget) + " " + str(xpac) + " " + str(ypac))
